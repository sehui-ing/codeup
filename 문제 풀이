# 전체 6000번대

# 12번
a = int(input())
b = int(input())
print(a)
print(b)

# 13번
a = str(input())
b = str(input())
print(b)
print(a)

# 14번
realNumber = float(input())
print(f"""{realNumber}
{realNumber}
{realNumber}""")

# 15번
a, b = input().split()
a=int(a)
b=int(b)
print(a)
print(b)
또는
a, b = map(int, input().split())
print(a)
print(b)

# 16번
a, b = input().split()
a, b = b, a
print(a, b)

# 17번
s = input()
print(s, s, s)

# 18번
a, b = input().split(':')
print(a, b, sep=':')

# 19번
y, m, d = input().split('.')
print(d, m, y, sep = '-')

# 20번
a, b = input().split('-')
print(a, b, sep = '')

# 89번
s, r, n = map(int, input().split())
res = s
for i in range(1, n):
    res = s * (r**i)

print(res)

# 90번
a, m, d, n = map(int, input().split())

res = a

for i in range(1, n):
    res = (res*m) + d

print(res)

# 91번
a, b, c = map(int, input().split())
d = 1

while True:
    if not (d%a == 0 and d%b == 0 and d%c == 0):
        d += 1
    else:
        print(d)
        break

# 92번
count_times = int(input()) # 몇 번 부를지
call_desk = input().split() # 몇 번째 책상을 부를지

for i in range(count_times):
    call_desk[i] = int(call_desk[i])

desk_count = []
for i in range(24):
    desk_count.append(0) # 맨 처음엔 카운트 없음

for i in range(count_times):
    desk_count[call_desk[i]] += 1

for i in range(1, 24):
    print(desk_count[i], end = ' ')

# 93번
n = int(input())
a = input().split()

for _ in range(n-1, -1, -1):
    print(a[_], end = ' ')
또는
n = int(input())
a = input().split()

print(" ".join(list(reversed(a))))
참고
n = int(input())
a = input().split()

my_list = [] # 새로운 리스트 만들어서 딥 카피(원본 리스트 손상 방지)
for i in range(n):
    my_list.append(a[i])
print(" ".join(list(reversed(my_list))))

for _ in range(n-1, -1, -1):
    print(a[_], end = ' ')

# 94번
# min 함수 이용(정렬하는 방법을 알고 있을 경우 사용하도록)
n = int(input())
a = list(map(int, input().split()))

print(min(a))
또는
# 정렬하는 방법을 모르고 있을 경우 직접 정렬하는 알고리즘을 생각해 보자 !
n = int(input())
a = input().split()

for i in range(n):
    a[i] = int(a[i])

min = a[0]
for i in range(n):
    if a[i] < a[0]:
        min = a[i]

print(min)

# 95번
d = []

for i in range(20):
    d.append([])
    for j in range(20):
        d[i].append(0)

# d = [[0 for j in range(20)] for i in range(20)]

n = int(input())
for i in range(n):
    x, y = map(int, input().split())
    d[x][y] = 1

for i in range(1, 20):
    for j in range(1, 20):
        print(d[i][j], end= ' ')
    print()
또는
n = int(input())

answer = [["0" for _ in range(19)] for _ in range(19)]

for i in range(n):
    x, y = map(int, input().split())
    answer[x-1][y-1] = "1"
    
for k in answer:
    print(" ".join(k))

# 96번
settings = []

for i in range(19):
    arr_elem = list(map(int, input().split()))
    settings.append(arr_elem)

n = int(input())

for i in range(n):
    x, y = map(int, input().split())
    for j in range(0, 19):
        if settings[j][y-1] == 0:
            settings[j][y-1] = 1
        else:
            settings[j][y-1] = 0

        if settings[x-1][j] == 0:
            settings[x-1][j] = 1
        else:
            settings[x-1][j] = 0

for row in settings:
    print(*row)
또는
settings = []

for i in range(19):
    arr_elem = list(map(int, input().split()))
    settings.append(arr_elem)

n = int(input())

for i in range(n):
    x, y = map(int, input().split())
    for j in range(19):
        settings[x-1][j] = str(int(not int(settings[x-1][j])))
        settings[j][y-1] = str(int(not int(settings[j][y-1])))

for row in settings:
    print(*row)
또는
settings = []

for i in range(19):
    arr_elem = list(map(int, input().split()))
    settings.append(arr_elem)

n = int(input())

for i in range(n):
    x, y = map(int, input().split())
    for j in range(19):
        settings[x-1][j] = int(not int(settings[x-1][j]))
        settings[j][y-1] = int(not int(settings[j][y-1]))

for row in settings:
    print(*row)
또는
settings = []

for i in range(19):
    arr_elem = list(map(int, input().split()))
    settings.append(arr_elem)

n = int(input())

for i in range(n):
    x, y = map(int, input().split())
    for j in range(19):
        settings[x-1][j] = int(not settings[x-1][j])
        settings[j][y-1] = int(not settings[j][y-1])

for row in settings:
    print(*row)

# 97번
# 5 5  > 세로 가로 순 격자 크기
# 3  > 몇 개의 막대 삽입할 것인가 ?
# 2 0 1 1  > 길이, 방향(0: 가로, 1: 세로), 좌표(x: 가로, y: 세로)
# 3 1 2 3  > 동일
# 4 1 2 5  > 동일

h, w = map(int, input().split())

d = []

for i in range(h):
    d.append([])
    for j in range(w):
        d[i].append("0")

n = int(input())
for i in range(n):
    length, direct, x, y = map(int, input().split())
    if direct == 0:
        for j in range(y-1, y + length - 1):
            d[x-1][j] = "1"
    else:
        for k in range(x-1, x + length - 1):
            d[k][y-1] = "1"

for _ in d:
    print(" ".join(_))

# 98번
matrix = []
for _ in range(10):  # 개미가 움직일 공간 입력받기
    matrix.append(input().split())

x, y = 1, 1  # 개미집 출발 지점


while x <= 8 and y <= 8:  # 최동, 최남단까지만 진행
    if matrix[x][y] == "2":  # 먹이 찾았으면 그 위치 9로 바꾸고 중지
        matrix[x][y] = "9"
        break
    matrix[x][y] = "9"  # 먹이가 없을 경우 해당 위치에 자리했으니 9로 바꾸고 진행
    if matrix[x+1][y] == "1" and matrix[x][y+1] == "1":  # 오른쪽 아래가 1이면 맨 마지막 위치이므로 중지
        break
    elif matrix[x][y+1] == "1":  # 열의 한 칸 오른쪽이 1이면 벽이므로 행을 변경
        x += 1
    else:  # 그외의 경우 열을 변경
        y += 1

for i in matrix:  # 출력
    print(" ".join(i))
